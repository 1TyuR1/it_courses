services:
  # PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: eduquest-postgres
    environment:
      POSTGRES_USER: eduquest
      POSTGRES_PASSWORD: dev_password
      POSTGRES_DB: eduquest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - eduquest-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eduquest"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: eduquest-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eduquest-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Kafka + Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: eduquest-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - eduquest-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: eduquest-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - eduquest-network
    healthcheck:
      test:
        [
          "CMD",
          "kafka-broker-api-versions",
          "--bootstrap-server",
          "localhost:9092",
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  # Kafka UI (для удобства)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: eduquest-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - eduquest-network

volumes:
  postgres_data:
  redis_data:

networks:
  eduquest-network:
    driver: bridge
